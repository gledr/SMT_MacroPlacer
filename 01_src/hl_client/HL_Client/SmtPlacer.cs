// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: smt_placer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PlacerProto {

  /// <summary>Holder for reflection information generated from smt_placer.proto</summary>
  public static partial class SmtPlacerReflection {

    #region Descriptor
    /// <summary>File descriptor for smt_placer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SmtPlacerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBzbXRfcGxhY2VyLnByb3RvEgtQbGFjZXJQcm90byKQAQoFTWFjcm8SDAoE",
            "bmFtZRgBIAIoCRIKCgJpZBgCIAIoCRINCgV3aWR0aBgDIAIoBRIOCgZoZWln",
            "aHQYBCACKAUSNgoLb3JpZW50YXRpb24YBSABKA4yGS5QbGFjZXJQcm90by5l",
            "T3JpZW50YXRpb246BmVOb3J0aBIKCgJseBgGIAEoBRIKCgJseRgHIAEoBSJc",
            "CghUZXJtaW5hbBIMCgRuYW1lGAEgAigJEiQKA2RpchgCIAIoDjIXLlBsYWNl",
            "clByb3RvLmVEaXJlY3Rpb24SDQoFcG9zX3gYAyABKAUSDQoFcG9zX3kYBCAB",
            "KAUiOAoGTGF5b3V0EgoKAmx4GAEgAigFEgoKAmx5GAIgAigFEgoKAnV4GAMg",
            "ASgFEgoKAnV5GAQgASgFIm8KDE1hY3JvQ2lyY3VpdBIeCgFsGAEgAigLMhMu",
            "UGxhY2VyUHJvdG8uTGF5b3V0Eh0KAW0YAiADKAsyEi5QbGFjZXJQcm90by5N",
            "YWNybxIgCgF0GAMgAygLMhUuUGxhY2VyUHJvdG8uVGVybWluYWwqPAoMZU9y",
            "aWVudGF0aW9uEgoKBmVOb3J0aBAAEgkKBWVXZXN0EAESCgoGZVNvdXRoEAIS",
            "CQoFZUVhc3QQAypHCgplRGlyZWN0aW9uEgoKBmVJbnB1dBAAEgsKB2VPdXRw",
            "dXQQARISCg5lQmlEaXJlY3Rpb25hbBACEgwKCGVVbmtub3duEAM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PlacerProto.eOrientation), typeof(global::PlacerProto.eDirection), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PlacerProto.Macro), global::PlacerProto.Macro.Parser, new[]{ "Name", "Id", "Width", "Height", "Orientation", "Lx", "Ly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PlacerProto.Terminal), global::PlacerProto.Terminal.Parser, new[]{ "Name", "Dir", "PosX", "PosY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PlacerProto.Layout), global::PlacerProto.Layout.Parser, new[]{ "Lx", "Ly", "Ux", "Uy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PlacerProto.MacroCircuit), global::PlacerProto.MacroCircuit.Parser, new[]{ "L", "M", "T" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum eOrientation {
    [pbr::OriginalName("eNorth")] ENorth = 0,
    [pbr::OriginalName("eWest")] EWest = 1,
    [pbr::OriginalName("eSouth")] ESouth = 2,
    [pbr::OriginalName("eEast")] EEast = 3,
  }

  public enum eDirection {
    [pbr::OriginalName("eInput")] EInput = 0,
    [pbr::OriginalName("eOutput")] EOutput = 1,
    [pbr::OriginalName("eBiDirectional")] EBiDirectional = 2,
    [pbr::OriginalName("eUnknown")] EUnknown = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Macro : pb::IMessage<Macro>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Macro> _parser = new pb::MessageParser<Macro>(() => new Macro());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Macro> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PlacerProto.SmtPlacerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Macro() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Macro(Macro other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      id_ = other.id_;
      width_ = other.width_;
      height_ = other.height_;
      orientation_ = other.orientation_;
      lx_ = other.lx_;
      ly_ = other.ly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Macro Clone() {
      return new Macro(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private readonly static int WidthDefaultValue = 0;

    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { if ((_hasBits0 & 1) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private readonly static int HeightDefaultValue = 0;

    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 5;
    private readonly static global::PlacerProto.eOrientation OrientationDefaultValue = global::PlacerProto.eOrientation.ENorth;

    private global::PlacerProto.eOrientation orientation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PlacerProto.eOrientation Orientation {
      get { if ((_hasBits0 & 4) != 0) { return orientation_; } else { return OrientationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        orientation_ = value;
      }
    }
    /// <summary>Gets whether the "orientation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrientation {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "orientation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrientation() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "lx" field.</summary>
    public const int LxFieldNumber = 6;
    private readonly static int LxDefaultValue = 0;

    private int lx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lx {
      get { if ((_hasBits0 & 8) != 0) { return lx_; } else { return LxDefaultValue; } }
      set {
        _hasBits0 |= 8;
        lx_ = value;
      }
    }
    /// <summary>Gets whether the "lx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLx {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "lx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLx() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "ly" field.</summary>
    public const int LyFieldNumber = 7;
    private readonly static int LyDefaultValue = 0;

    private int ly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ly {
      get { if ((_hasBits0 & 16) != 0) { return ly_; } else { return LyDefaultValue; } }
      set {
        _hasBits0 |= 16;
        ly_ = value;
      }
    }
    /// <summary>Gets whether the "ly" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLy {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "ly" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLy() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Macro);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Macro other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Orientation != other.Orientation) return false;
      if (Lx != other.Lx) return false;
      if (Ly != other.Ly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasOrientation) hash ^= Orientation.GetHashCode();
      if (HasLx) hash ^= Lx.GetHashCode();
      if (HasLy) hash ^= Ly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      if (HasOrientation) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Orientation);
      }
      if (HasLx) {
        output.WriteRawTag(48);
        output.WriteInt32(Lx);
      }
      if (HasLy) {
        output.WriteRawTag(56);
        output.WriteInt32(Ly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      if (HasOrientation) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Orientation);
      }
      if (HasLx) {
        output.WriteRawTag(48);
        output.WriteInt32(Lx);
      }
      if (HasLy) {
        output.WriteRawTag(56);
        output.WriteInt32(Ly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (HasOrientation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Orientation);
      }
      if (HasLx) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lx);
      }
      if (HasLy) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ly);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Macro other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasOrientation) {
        Orientation = other.Orientation;
      }
      if (other.HasLx) {
        Lx = other.Lx;
      }
      if (other.HasLy) {
        Ly = other.Ly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
          case 40: {
            Orientation = (global::PlacerProto.eOrientation) input.ReadEnum();
            break;
          }
          case 48: {
            Lx = input.ReadInt32();
            break;
          }
          case 56: {
            Ly = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
          case 40: {
            Orientation = (global::PlacerProto.eOrientation) input.ReadEnum();
            break;
          }
          case 48: {
            Lx = input.ReadInt32();
            break;
          }
          case 56: {
            Ly = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Terminal : pb::IMessage<Terminal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Terminal> _parser = new pb::MessageParser<Terminal>(() => new Terminal());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Terminal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PlacerProto.SmtPlacerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Terminal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Terminal(Terminal other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      dir_ = other.dir_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Terminal Clone() {
      return new Terminal(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 2;
    private readonly static global::PlacerProto.eDirection DirDefaultValue = global::PlacerProto.eDirection.EInput;

    private global::PlacerProto.eDirection dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PlacerProto.eDirection Dir {
      get { if ((_hasBits0 & 1) != 0) { return dir_; } else { return DirDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dir_ = value;
      }
    }
    /// <summary>Gets whether the "dir" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDir {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dir" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDir() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos_x" field.</summary>
    public const int PosXFieldNumber = 3;
    private readonly static int PosXDefaultValue = 0;

    private int posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosX {
      get { if ((_hasBits0 & 2) != 0) { return posX_; } else { return PosXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        posX_ = value;
      }
    }
    /// <summary>Gets whether the "pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPosX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPosX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pos_y" field.</summary>
    public const int PosYFieldNumber = 4;
    private readonly static int PosYDefaultValue = 0;

    private int posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosY {
      get { if ((_hasBits0 & 4) != 0) { return posY_; } else { return PosYDefaultValue; } }
      set {
        _hasBits0 |= 4;
        posY_ = value;
      }
    }
    /// <summary>Gets whether the "pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPosY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPosY() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Terminal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Terminal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Dir != other.Dir) return false;
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDir) hash ^= Dir.GetHashCode();
      if (HasPosX) hash ^= PosX.GetHashCode();
      if (HasPosY) hash ^= PosY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasDir) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Dir);
      }
      if (HasPosX) {
        output.WriteRawTag(24);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(32);
        output.WriteInt32(PosY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasDir) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Dir);
      }
      if (HasPosX) {
        output.WriteRawTag(24);
        output.WriteInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(32);
        output.WriteInt32(PosY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDir) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dir);
      }
      if (HasPosX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (HasPosY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Terminal other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDir) {
        Dir = other.Dir;
      }
      if (other.HasPosX) {
        PosX = other.PosX;
      }
      if (other.HasPosY) {
        PosY = other.PosY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Dir = (global::PlacerProto.eDirection) input.ReadEnum();
            break;
          }
          case 24: {
            PosX = input.ReadInt32();
            break;
          }
          case 32: {
            PosY = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Dir = (global::PlacerProto.eDirection) input.ReadEnum();
            break;
          }
          case 24: {
            PosX = input.ReadInt32();
            break;
          }
          case 32: {
            PosY = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Layout : pb::IMessage<Layout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Layout> _parser = new pb::MessageParser<Layout>(() => new Layout());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Layout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PlacerProto.SmtPlacerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layout(Layout other) : this() {
      _hasBits0 = other._hasBits0;
      lx_ = other.lx_;
      ly_ = other.ly_;
      ux_ = other.ux_;
      uy_ = other.uy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layout Clone() {
      return new Layout(this);
    }

    /// <summary>Field number for the "lx" field.</summary>
    public const int LxFieldNumber = 1;
    private readonly static int LxDefaultValue = 0;

    private int lx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lx {
      get { if ((_hasBits0 & 1) != 0) { return lx_; } else { return LxDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lx_ = value;
      }
    }
    /// <summary>Gets whether the "lx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLx {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "lx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLx() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ly" field.</summary>
    public const int LyFieldNumber = 2;
    private readonly static int LyDefaultValue = 0;

    private int ly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ly {
      get { if ((_hasBits0 & 2) != 0) { return ly_; } else { return LyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ly_ = value;
      }
    }
    /// <summary>Gets whether the "ly" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLy {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ly" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLy() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ux" field.</summary>
    public const int UxFieldNumber = 3;
    private readonly static int UxDefaultValue = 0;

    private int ux_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ux {
      get { if ((_hasBits0 & 4) != 0) { return ux_; } else { return UxDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ux_ = value;
      }
    }
    /// <summary>Gets whether the "ux" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUx {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ux" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUx() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "uy" field.</summary>
    public const int UyFieldNumber = 4;
    private readonly static int UyDefaultValue = 0;

    private int uy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uy {
      get { if ((_hasBits0 & 8) != 0) { return uy_; } else { return UyDefaultValue; } }
      set {
        _hasBits0 |= 8;
        uy_ = value;
      }
    }
    /// <summary>Gets whether the "uy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUy {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "uy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUy() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Layout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Layout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lx != other.Lx) return false;
      if (Ly != other.Ly) return false;
      if (Ux != other.Ux) return false;
      if (Uy != other.Uy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLx) hash ^= Lx.GetHashCode();
      if (HasLy) hash ^= Ly.GetHashCode();
      if (HasUx) hash ^= Ux.GetHashCode();
      if (HasUy) hash ^= Uy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLx) {
        output.WriteRawTag(8);
        output.WriteInt32(Lx);
      }
      if (HasLy) {
        output.WriteRawTag(16);
        output.WriteInt32(Ly);
      }
      if (HasUx) {
        output.WriteRawTag(24);
        output.WriteInt32(Ux);
      }
      if (HasUy) {
        output.WriteRawTag(32);
        output.WriteInt32(Uy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLx) {
        output.WriteRawTag(8);
        output.WriteInt32(Lx);
      }
      if (HasLy) {
        output.WriteRawTag(16);
        output.WriteInt32(Ly);
      }
      if (HasUx) {
        output.WriteRawTag(24);
        output.WriteInt32(Ux);
      }
      if (HasUy) {
        output.WriteRawTag(32);
        output.WriteInt32(Uy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLx) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lx);
      }
      if (HasLy) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ly);
      }
      if (HasUx) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ux);
      }
      if (HasUy) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Layout other) {
      if (other == null) {
        return;
      }
      if (other.HasLx) {
        Lx = other.Lx;
      }
      if (other.HasLy) {
        Ly = other.Ly;
      }
      if (other.HasUx) {
        Ux = other.Ux;
      }
      if (other.HasUy) {
        Uy = other.Uy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Lx = input.ReadInt32();
            break;
          }
          case 16: {
            Ly = input.ReadInt32();
            break;
          }
          case 24: {
            Ux = input.ReadInt32();
            break;
          }
          case 32: {
            Uy = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Lx = input.ReadInt32();
            break;
          }
          case 16: {
            Ly = input.ReadInt32();
            break;
          }
          case 24: {
            Ux = input.ReadInt32();
            break;
          }
          case 32: {
            Uy = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MacroCircuit : pb::IMessage<MacroCircuit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MacroCircuit> _parser = new pb::MessageParser<MacroCircuit>(() => new MacroCircuit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MacroCircuit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PlacerProto.SmtPlacerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MacroCircuit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MacroCircuit(MacroCircuit other) : this() {
      l_ = other.l_ != null ? other.l_.Clone() : null;
      m_ = other.m_.Clone();
      t_ = other.t_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MacroCircuit Clone() {
      return new MacroCircuit(this);
    }

    /// <summary>Field number for the "l" field.</summary>
    public const int LFieldNumber = 1;
    private global::PlacerProto.Layout l_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PlacerProto.Layout L {
      get { return l_; }
      set {
        l_ = value;
      }
    }

    /// <summary>Field number for the "m" field.</summary>
    public const int MFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PlacerProto.Macro> _repeated_m_codec
        = pb::FieldCodec.ForMessage(18, global::PlacerProto.Macro.Parser);
    private readonly pbc::RepeatedField<global::PlacerProto.Macro> m_ = new pbc::RepeatedField<global::PlacerProto.Macro>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PlacerProto.Macro> M {
      get { return m_; }
    }

    /// <summary>Field number for the "t" field.</summary>
    public const int TFieldNumber = 3;
    private static readonly pb::FieldCodec<global::PlacerProto.Terminal> _repeated_t_codec
        = pb::FieldCodec.ForMessage(26, global::PlacerProto.Terminal.Parser);
    private readonly pbc::RepeatedField<global::PlacerProto.Terminal> t_ = new pbc::RepeatedField<global::PlacerProto.Terminal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PlacerProto.Terminal> T {
      get { return t_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MacroCircuit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MacroCircuit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(L, other.L)) return false;
      if(!m_.Equals(other.m_)) return false;
      if(!t_.Equals(other.t_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (l_ != null) hash ^= L.GetHashCode();
      hash ^= m_.GetHashCode();
      hash ^= t_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (l_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(L);
      }
      m_.WriteTo(output, _repeated_m_codec);
      t_.WriteTo(output, _repeated_t_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (l_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(L);
      }
      m_.WriteTo(ref output, _repeated_m_codec);
      t_.WriteTo(ref output, _repeated_t_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (l_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(L);
      }
      size += m_.CalculateSize(_repeated_m_codec);
      size += t_.CalculateSize(_repeated_t_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MacroCircuit other) {
      if (other == null) {
        return;
      }
      if (other.l_ != null) {
        if (l_ == null) {
          L = new global::PlacerProto.Layout();
        }
        L.MergeFrom(other.L);
      }
      m_.Add(other.m_);
      t_.Add(other.t_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (l_ == null) {
              L = new global::PlacerProto.Layout();
            }
            input.ReadMessage(L);
            break;
          }
          case 18: {
            m_.AddEntriesFrom(input, _repeated_m_codec);
            break;
          }
          case 26: {
            t_.AddEntriesFrom(input, _repeated_t_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (l_ == null) {
              L = new global::PlacerProto.Layout();
            }
            input.ReadMessage(L);
            break;
          }
          case 18: {
            m_.AddEntriesFrom(ref input, _repeated_m_codec);
            break;
          }
          case 26: {
            t_.AddEntriesFrom(ref input, _repeated_t_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
